import { defineConfig } from "vitepress"
import { groupIconMdPlugin, groupIconVitePlugin } from "vitepress-plugin-group-icons"

export default defineConfig({
    base: "/fn/",
    description: "A utility library for TypeScript.",
    title: "fn",
    markdown: {
        theme: {
            dark: "catppuccin-macchiato",
            light: "github-light-default",
        },
        config(md) {
            md.use(groupIconMdPlugin)
        },
    },
    themeConfig: {
        outline: "deep",
        docFooter: {
            next: false,
            prev: false,
        },
        search: {
            provider: "local",
        },
        sidebar: [
            {
                text: "API",
                items: [
                    {
                        base: "/number/",
                        collapsed: true,
                        text: "Number",
                        items: [
                            { link: "add", text: "add" },
                            { link: "ceil", text: "ceil" },
                            { link: "clamp", text: "clamp" },
                            { link: "div", text: "div" },
                            { link: "exp", text: "exp" },
                            { link: "floor", text: "floor" },
                            { link: "gt", text: "gt" },
                            { link: "gte", text: "gte" },
                            { link: "isBigInt", text: "isBigInt" },
                            { link: "isFinite", text: "isFinite" },
                            { link: "isFloat", text: "isFloat" },
                            { link: "isInRange", text: "isInRange" },
                            { link: "isInt", text: "isInt" },
                            { link: "isNotFinite", text: "isNotFinite" },
                            { link: "isNumber", text: "isNumber" },
                            { link: "limitPrecision", text: "limitPrecision" },
                            { link: "lt", text: "lt" },
                            { link: "lte", text: "lte" },
                            { link: "max", text: "max" },
                            { link: "min", text: "min" },
                            { link: "mul", text: "mul" },
                            { link: "or", text: "or" },
                            { link: "orElse", text: "orElse" },
                            { link: "orThrow", text: "orThrow" },
                            { link: "randomInt", text: "randomInt" },
                            { link: "round", text: "round" },
                            { link: "sub", text: "sub" },
                            { link: "toFixed", text: "toFixed" },
                            { link: "toString", text: "toString" },
                        ],
                    },
                    {
                        base: "/string/",
                        collapsed: true,
                        text: "String",
                        items: [
                            { link: "append", text: "append" },
                            { link: "camelCase", text: "camelCase" },
                            { link: "capitalize", text: "capitalize" },
                            { link: "constantCase", text: "constantCase" },
                            { link: "drop", text: "drop" },
                            { link: "dropLast", text: "dropLast" },
                            { link: "empty", text: "empty" },
                            { link: "endsWith", text: "endsWith" },
                            { link: "has", text: "has" },
                            { link: "hasAll", text: "hasAll" },
                            { link: "hasAny", text: "hasAny" },
                            { link: "hasNone", text: "hasNone" },
                            { link: "indexOf", text: "indexOf" },
                            { link: "indexOfOr", text: "indexOfOr" },
                            { link: "indexOfOrElse", text: "indexOfOrElse" },
                            { link: "indexOfOrThrow", text: "indexOfOrThrow" },
                            { link: "isEmpty", text: "isEmpty" },
                            { link: "isString", text: "isString" },
                            { link: "kebabCase", text: "kebabCase" },
                            { link: "lastIndexOf", text: "lastIndexOf" },
                            { link: "lastIndexOfOr", text: "lastIndexOfOr" },
                            { link: "lastIndexOfOrElse", text: "lastIndexOfOrElse" },
                            { link: "lastIndexOfOrThrow", text: "lastIndexOfOrThrow" },
                            { link: "length", text: "length" },
                            { link: "lowerCase", text: "lowerCase" },
                            { link: "match", text: "match" },
                            { link: "matchOr", text: "matchOr" },
                            { link: "matchOrElse", text: "matchOrElse" },
                            { link: "matchOrThrow", text: "matchOrThrow" },
                            { link: "padEnd", text: "padEnd" },
                            { link: "padStart", text: "padStart" },
                            { link: "parseFloat", text: "parseFloat" },
                            { link: "parseFloatOr", text: "parseFloatOr" },
                            { link: "parseFloatOrElse", text: "parseFloatOrElse" },
                            { link: "parseFloatOrThrow", text: "parseFloatOrThrow" },
                            { link: "parseInt", text: "parseInt" },
                            { link: "parseIntOr", text: "parseIntOr" },
                            { link: "parseIntOrElse", text: "parseIntOrElse" },
                            { link: "parseIntOrThrow", text: "parseIntOrThrow" },
                            { link: "pascalCase", text: "pascalCase" },
                            { link: "prepend", text: "prepend" },
                            { link: "repeat", text: "repeat" },
                            { link: "replace", text: "replace" },
                            { link: "replaceAll", text: "replaceAll" },
                            { link: "reverse", text: "reverse" },
                            { link: "slice", text: "slice" },
                            { link: "snakeCase", text: "snakeCase" },
                            { link: "split", text: "split" },
                            { link: "startsWith", text: "startsWith" },
                            { link: "take", text: "take" },
                            { link: "takeLast", text: "takeLast" },
                            { link: "test", text: "test" },
                            { link: "titleCase", text: "titleCase" },
                            { link: "trim", text: "trim" },
                            { link: "trimEnd", text: "trimEnd" },
                            { link: "trimStart", text: "trimStart" },
                            { link: "uncapitalize", text: "uncapitalize" },
                            { link: "upperCase", text: "upperCase" },
                        ],
                    },
                    {
                        base: "/array/",
                        collapsed: true,
                        text: "Array",
                        items: [
                            { link: "append", text: "append" },
                            { link: "at", text: "at" },
                            { link: "atOr", text: "atOr" },
                            { link: "atOrElse", text: "atOrElse" },
                            { link: "atOrThrow", text: "atOrThrow" },
                            { link: "clone", text: "clone" },
                            { link: "compact", text: "compact" },
                            { link: "concat", text: "concat" },
                            { link: "countBy", text: "countBy" },
                            { link: "drop", text: "drop" },
                            { link: "dropLast", text: "dropLast" },
                            { link: "every", text: "every" },
                            { link: "filter", text: "filter" },
                            { link: "find", text: "find" },
                            { link: "findIndex", text: "findIndex" },
                            { link: "findIndexOr", text: "findIndexOr" },
                            { link: "findIndexOrElse", text: "findIndexOrElse" },
                            { link: "findIndexOrThrow", text: "findIndexOrThrow" },
                            { link: "findLast", text: "findLast" },
                            { link: "findLastIndex", text: "findLastIndex" },
                            { link: "findLastIndexOr", text: "findLastIndexOr" },
                            { link: "findLastIndexOrElse", text: "findLastIndexOrElse" },
                            { link: "findLastIndexOrThrow", text: "findLastIndexOrThrow" },
                            { link: "findLastOr", text: "findLastOr" },
                            { link: "findLastOrElse", text: "findLastOrElse" },
                            { link: "findLastOrThrow", text: "findLastOrThrow" },
                            { link: "findMap", text: "findMap" },
                            { link: "findMapAll", text: "findMapAll" },
                            { link: "findMapLast", text: "findMapLast" },
                            { link: "findMapLastOr", text: "findMapLastOr" },
                            { link: "findMapLastOrElse", text: "findMapLastOrElse" },
                            { link: "findMapLastOrThrow", text: "findMapLastOrThrow" },
                            { link: "findMapOr", text: "findMapOr" },
                            { link: "findMapOrElse", text: "findMapOrElse" },
                            { link: "findMapOrThrow", text: "findMapOrThrow" },
                            { link: "findOr", text: "findOr" },
                            { link: "findOrElse", text: "findOrElse" },
                            { link: "findOrThrow", text: "findOrThrow" },
                            { link: "findRemove", text: "findRemove" },
                            { link: "findRemoveLast", text: "findRemoveLast" },
                            { link: "findRemoveLastOr", text: "findRemoveLastOr" },
                            { link: "findRemoveLastOrElse", text: "findRemoveLastOrElse" },
                            { link: "findRemoveLastOrThrow", text: "findRemoveLastOrThrow" },
                            { link: "findRemoveOr", text: "findRemoveOr" },
                            { link: "findRemoveOrElse", text: "findRemoveOrElse" },
                            { link: "findRemoveOrThrow", text: "findRemoveOrThrow" },
                            { link: "findReplace", text: "findReplace" },
                            { link: "findReplaceLast", text: "findReplaceLast" },
                            { link: "findReplaceLastOr", text: "findReplaceLastOr" },
                            { link: "findReplaceLastOrElse", text: "findReplaceLastOrElse" },
                            { link: "findReplaceLastOrThrow", text: "findReplaceLastOrThrow" },
                            { link: "findReplaceOr", text: "findReplaceOr" },
                            { link: "findReplaceOrElse", text: "findReplaceOrElse" },
                            { link: "findReplaceOrThrow", text: "findReplaceOrThrow" },
                            { link: "first", text: "first" },
                            { link: "firstOr", text: "firstOr" },
                            { link: "firstOrElse", text: "firstOrElse" },
                            { link: "firstOrThrow", text: "firstOrThrow" },
                            { link: "flatMap", text: "flatMap" },
                            { link: "forEach", text: "forEach" },
                            { link: "groupBy", text: "groupBy" },
                            { link: "has", text: "has" },
                            { link: "hasAll", text: "hasAll" },
                            { link: "hasAny", text: "hasAny" },
                            { link: "hasNone", text: "hasNone" },
                            { link: "indexBy", text: "indexBy" },
                            { link: "indexOf", text: "indexOf" },
                            { link: "indexOfOr", text: "indexOfOr" },
                            { link: "indexOfOrElse", text: "indexOfOrElse" },
                            { link: "indexOfOrThrow", text: "indexOfOrThrow" },
                            { link: "insertAllAt", text: "insertAllAt" },
                            { link: "insertAllAtOr", text: "insertAllAtOr" },
                            { link: "insertAllAtOrElse", text: "insertAllAtOrElse" },
                            { link: "insertAllAtOrThrow", text: "insertAllAtOrThrow" },
                            { link: "insertAt", text: "insertAt" },
                            { link: "insertAtOr", text: "insertAtOr" },
                            { link: "insertAtOrElse", text: "insertAtOrElse" },
                            { link: "insertAtOrThrow", text: "insertAtOrThrow" },
                            { link: "isArray", text: "isArray" },
                            { link: "isEmpty", text: "isEmpty" },
                            { link: "isShallowEqual", text: "isShallowEqual" },
                            { link: "join", text: "join" },
                            { link: "last", text: "last" },
                            { link: "lastIndexOf", text: "lastIndexOf" },
                            { link: "lastIndexOfOr", text: "lastIndexOfOr" },
                            { link: "lastIndexOfOrElse", text: "lastIndexOfOrElse" },
                            { link: "lastIndexOfOrThrow", text: "lastIndexOfOrThrow" },
                            { link: "lastOr", text: "lastOr" },
                            { link: "lastOrElse", text: "lastOrElse" },
                            { link: "lastOrThrow", text: "lastOrThrow" },
                            { link: "length", text: "length" },
                            { link: "mapAt", text: "mapAt" },
                            { link: "mapAtOr", text: "mapAtOr" },
                            { link: "mapAtOrElse", text: "mapAtOrElse" },
                            { link: "mapAtOrThrow", text: "mapAtOrThrow" },
                            { link: "mapEach", text: "mapEach" },
                            { link: "maxOr", text: "maxOr" },
                            { link: "maxOrElse", text: "maxOrElse" },
                            { link: "maxOrThrow", text: "maxOrThrow" },
                            { link: "meanOr", text: "meanOr" },
                            { link: "meanOrElse", text: "meanOrElse" },
                            { link: "meanOrThrow", text: "meanOrThrow" },
                            { link: "medianOr", text: "medianOr" },
                            { link: "medianOrElse", text: "medianOrElse" },
                            { link: "medianOrThrow", text: "medianOrThrow" },
                            { link: "minOr", text: "minOr" },
                            { link: "minOrElse", text: "minOrElse" },
                            { link: "minOrThrow", text: "minOrThrow" },
                            { link: "none", text: "none" },
                            { link: "partition", text: "partition" },
                            { link: "prepend", text: "prepend" },
                            { link: "random", text: "random" },
                            { link: "randomOr", text: "randomOr" },
                            { link: "randomOrElse", text: "randomOrElse" },
                            { link: "reduce", text: "reduce" },
                            { link: "reject", text: "reject" },
                            { link: "remove", text: "remove" },
                            { link: "removeAll", text: "removeAll" },
                            { link: "removeAt", text: "removeAt" },
                            { link: "removeAtOr", text: "removeAtOr" },
                            { link: "removeAtOrElse", text: "removeAtOrElse" },
                            { link: "removeAtOrThrow", text: "removeAtOrThrow" },
                            { link: "removeLast", text: "removeLast" },
                            { link: "removeLastOr", text: "removeLastOr" },
                            { link: "removeLastOrElse", text: "removeLastOrElse" },
                            { link: "removeLastOrThrow", text: "removeLastOrThrow" },
                            { link: "removeOrElse", text: "removeOrElse" },
                            { link: "removeOrThrow", text: "removeOrThrow" },
                            { link: "replace", text: "replace" },
                            { link: "replaceLast", text: "replaceLast" },
                            { link: "replaceLastOr", text: "replaceLastOr" },
                            { link: "replaceLastOrElse", text: "replaceLastOrElse" },
                            { link: "replaceLastOrThrow", text: "replaceLastOrThrow" },
                            { link: "replaceOr", text: "replaceOr" },
                            { link: "replaceOrElse", text: "replaceOrElse" },
                            { link: "replaceOrThrow", text: "replaceOrThrow" },
                            { link: "setAt", text: "setAt" },
                            { link: "setAtOr", text: "setAtOr" },
                            { link: "setAtOrElse", text: "setAtOrElse" },
                            { link: "setAtOrThrow", text: "setAtOrThrow" },
                            { link: "shuffle", text: "shuffle" },
                            { link: "slice", text: "slice" },
                            { link: "some", text: "some" },
                            { link: "sort", text: "sort" },
                            { link: "sum", text: "sum" },
                            { link: "take", text: "take" },
                            { link: "takeLast", text: "takeLast" },
                            { link: "union", text: "union" },
                            { link: "unique", text: "unique" },
                        ],
                    },
                    {
                        base: "/object/",
                        collapsed: true,
                        text: "Object",
                        items: [
                            { link: "assign", text: "assign" },
                            { link: "clone", text: "clone" },
                            { link: "entries", text: "entries" },
                            { link: "evolve", text: "evolve" },
                            { link: "forEach", text: "forEach" },
                            { link: "fromEntries", text: "fromEntries" },
                            { link: "get", text: "get" },
                            { link: "getOr", text: "getOr" },
                            { link: "getOrElse", text: "getOrElse" },
                            { link: "getOrThrow", text: "getOrThrow" },
                            { link: "hasKey", text: "hasKey" },
                            { link: "hasProp", text: "hasProp" },
                            { link: "is", text: "is" },
                            { link: "isEmpty", text: "isEmpty" },
                            { link: "isObject", text: "isObject" },
                            { link: "isShallowEqual", text: "isShallowEqual" },
                            { link: "keys", text: "keys" },
                            { link: "map", text: "map" },
                            { link: "mapAssign", text: "mapAssign" },
                            { link: "mapMerge", text: "mapMerge" },
                            { link: "matches", text: "matches" },
                            { link: "merge", text: "merge" },
                            { link: "omit", text: "omit" },
                            { link: "pick", text: "pick" },
                            { link: "set", text: "set" },
                            { link: "test", text: "test" },
                            { link: "testAll", text: "testAll" },
                            { link: "values", text: "values" },
                        ],
                    },
                    {
                        base: "/promise/",
                        collapsed: true,
                        text: "Promise",
                        items: [
                            { link: "debounce", text: "debounce" },
                            { link: "defer", text: "defer" },
                            { link: "isPromise", text: "isPromise" },
                            { link: "limit", text: "limit" },
                            { link: "orElse", text: "orElse" },
                            { link: "queue", text: "queue" },
                            { link: "sleep", text: "sleep" },
                            { link: "then", text: "then" },
                            { link: "throttle", text: "throttle" },
                        ],
                    },
                    {
                        base: "/map/",
                        collapsed: true,
                        text: "Map",
                        items: [
                            { link: "clone", text: "clone" },
                            { link: "compact", text: "compact" },
                            { link: "filter", text: "filter" },
                            { link: "forEach", text: "forEach" },
                            { link: "get", text: "get" },
                            { link: "getOr", text: "getOr" },
                            { link: "getOrElse", text: "getOrElse" },
                            { link: "getOrThrow", text: "getOrThrow" },
                            { link: "has", text: "has" },
                            { link: "hasAll", text: "hasAll" },
                            { link: "hasAny", text: "hasAny" },
                            { link: "hasNone", text: "hasNone" },
                            { link: "isEmpty", text: "isEmpty" },
                            { link: "isMap", text: "isMap" },
                            { link: "isShallowEqual", text: "isShallowEqual" },
                            { link: "map", text: "map" },
                            { link: "mapEach", text: "mapEach" },
                            { link: "mapOr", text: "mapOr" },
                            { link: "mapOrElse", text: "mapOrElse" },
                            { link: "mapOrThrow", text: "mapOrThrow" },
                            { link: "reject", text: "reject" },
                            { link: "remove", text: "remove" },
                            { link: "removeAll", text: "removeAll" },
                            { link: "removeOr", text: "removeOr" },
                            { link: "removeOrElse", text: "removeOrElse" },
                            { link: "removeOrThrow", text: "removeOrThrow" },
                            { link: "set", text: "set" },
                        ],
                    },
                    {
                        base: "/set/",
                        collapsed: true,
                        text: "Set",
                        items: [
                            { link: "add", text: "add" },
                            { link: "addAll", text: "addAll" },
                            { link: "addOr", text: "addOr" },
                            { link: "addOrElse", text: "addOrElse" },
                            { link: "addOrThrow", text: "addOrThrow" },
                            { link: "clone", text: "clone" },
                            { link: "compact", text: "compact" },
                            { link: "difference", text: "difference" },
                            { link: "forEach", text: "forEach" },
                            { link: "has", text: "has" },
                            { link: "hasAll", text: "hasAll" },
                            { link: "hasAny", text: "hasAny" },
                            { link: "hasNone", text: "hasNone" },
                            { link: "intersection", text: "intersection" },
                            { link: "isDisjointFrom", text: "isDisjointFrom" },
                            { link: "isEmpty", text: "isEmpty" },
                            { link: "isSet", text: "isSet" },
                            { link: "isShallowEqual", text: "isShallowEqual" },
                            { link: "isSubsetOf", text: "isSubsetOf" },
                            { link: "isSupersetOf", text: "isSupersetOf" },
                            { link: "mapEach", text: "mapEach" },
                            { link: "remove", text: "remove" },
                            { link: "removeAll", text: "removeAll" },
                            { link: "removeOr", text: "removeOr" },
                            { link: "removeOrElse", text: "removeOrElse" },
                            { link: "removeOrThrow", text: "removeOrThrow" },
                            { link: "size", text: "size" },
                            { link: "symmetricDifference", text: "symmetricDifference" },
                            { link: "toArray", text: "toArray" },
                            { link: "union", text: "union" },
                        ],
                    },
                    {
                        base: "/option/",
                        collapsed: true,
                        text: "Option",
                        items: [
                            { link: "filter", text: "filter" },
                            { link: "isNone", text: "isNone" },
                            { link: "isSome", text: "isSome" },
                            { link: "map", text: "map" },
                            { link: "mapOr", text: "mapOr" },
                            { link: "mapOrElse", text: "mapOrElse" },
                            { link: "or", text: "or" },
                            { link: "orElse", text: "orElse" },
                            { link: "orThrow", text: "orThrow" },
                        ],
                    },
                    {
                        base: "/result/",
                        collapsed: true,
                        text: "Result",
                        items: [
                            { link: "types/Ok", text: "Ok" },
                            { link: "types/Err", text: "Err" },
                            { link: "types/Result", text: "Result" },
                            { link: "types/OkP", text: "OkP" },
                            { link: "types/ErrP", text: "ErrP" },
                            { link: "types/ResultP", text: "ResultP" },
                            { link: "types/OkLike", text: "OkLike" },
                            { link: "types/ErrLike", text: "ErrLike" },
                            { link: "types/ResultLike", text: "ResultLike" },
                            { link: "types/InferOk", text: "InferOk" },
                            { link: "types/InferErr", text: "InferErr" },
                            { link: "types/SimplifyResult", text: "SimplifyResult" },
                            { link: "ok", text: "ok" },
                            { link: "okP", text: "okP" },
                            { link: "err", text: "err" },
                            { link: "errP", text: "errP" },
                            { link: "isOk", text: "isOk" },
                            { link: "isErr", text: "isErr" },
                            { link: "isResult", text: "isResult" },
                            { link: "mapOk", text: "mapOk" },
                            { link: "mapErr", text: "mapErr" },
                            { link: "andThen", text: "andThen" },
                            { link: "orElse", text: "orElse" },
                            { link: "tapOk", text: "tapOk" },
                            { link: "tapErr", text: "tapErr" },
                            { link: "okOr", text: "okOr" },
                            { link: "okOrElse", text: "okOrElse" },
                            { link: "okOrThrow", text: "okOrThrow" },
                        ],
                    },
                    {
                        base: "/function/",
                        collapsed: true,
                        text: "Function",
                        items: [
                            { link: "dfdl", text: "dfdl" },
                            { link: "dfdlT", text: "dfdlT" },
                            { link: "flow", text: "flow" },
                            { link: "FnError", text: "FnError" },
                            { link: "ifElse", text: "ifElse" },
                            { link: "invoke", text: "invoke" },
                            { link: "is", text: "is" },
                            { link: "isAsyncIterable", text: "isAsyncIterable" },
                            { link: "isBoolean", text: "isBoolean" },
                            { link: "isDate", text: "isDate" },
                            { link: "isError", text: "isError" },
                            { link: "isFalsy", text: "isFalsy" },
                            { link: "isFunction", text: "isFunction" },
                            { link: "isImmutable", text: "isImmutable" },
                            { link: "isIterable", text: "isIterable" },
                            { link: "isMutable", text: "isMutable" },
                            { link: "isMutating", text: "isMutating" },
                            { link: "isNot", text: "isNot" },
                            { link: "isPrimitive", text: "isPrimitive" },
                            { link: "isRegExp", text: "isRegExp" },
                            { link: "isSymbol", text: "isSymbol" },
                            { link: "isTruthy", text: "isTruthy" },
                            { link: "log", text: "log" },
                            { link: "markAsImmutable", text: "markAsImmutable" },
                            { link: "markAsMutable", text: "markAsMutable" },
                            { link: "noop", text: "noop" },
                            { link: "not", text: "not" },
                            { link: "once", text: "once" },
                            { link: "pauseMutations", text: "pauseMutations" },
                            { link: "pipe", text: "pipe" },
                            { link: "startMutations", text: "startMutations" },
                            { link: "tap", text: "tap" },
                            { link: "when", text: "when" },
                            { link: "withMutations", text: "withMutations" },
                        ],
                    },
                ],
            },
        ],
        socialLinks: [
            { icon: "github", link: "https://github.com/MichaelOstermann/fn" },
        ],
    },
    vite: {
        plugins: [
            groupIconVitePlugin() as any,
        ],
    },
})
